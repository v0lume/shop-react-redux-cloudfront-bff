service: aws-node-http-api-project
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  profile: epam-h4v3u
  httpApi:
    cors:
      allowedOrigins:
        - http://localhost:3000
        - https://d2smauulytlpo1.cloudfront.net
  environment:
    SNS_ARN:
      Ref: createProductTopic
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [products, Arn]
        - "Fn::GetAtt": [stocks, Arn]
    - Effect: "Allow"
      Action: "sns:*"
      Resource:
        Ref: createProductTopic

functions:
  getProductsList:
    handler: lambda/getProductsList/index.handler
    events:
      - httpApi:
          path: /products
          method: get

  getProductsById:
    handler: lambda/getProductsById/index.handler
    events:
      - httpApi:
          path: /products/{id}
          method: get

  createProduct:
    handler: lambda/createProduct/index.handler
    events:
      - httpApi:
          path: /products
          method: post
      
  catalogBatchProcess:
    handler: lambda/catalogBatchProcess/index.handler
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt: [catalogItemsQueue, Arn]

resources:
  Resources:
    products:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: products
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    stocks:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: stocks
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: S
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties: 
        QueueName: catalogItemsQueue
      
    createProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic

    subscriptionProductTopic:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        TopicArn:
          Ref: createProductTopic
        Endpoint: artsiom_shmanouski@epam.com
